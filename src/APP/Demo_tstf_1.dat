# see ../APP/Demo_tstf_1.c   ../UIX/Demo_tstf_1.mak
# #             as first char defines commentline - is skipped
# ##            as first char defines commentline - is displayed
# :funcx:       startlabel, start of block; blockname ist "funcx";
#               end of block is start of next block - eg ":Block_2:"
# ::            starts remote-command; eg ":: WAIT_ESC" or ":: CLEAR"
# ::: fnc par   starts callBack with parameters; see "::: myFunc1" below
# ::: :funcx:   starts subProgram, returns to calling program; see "::: :SM1:" below;



#-------------------------------------------------------------
:L1:
# unload active model; do not save
:: clear
# load model
:: LOAD(Data/sample_Ziegel1.bmp)
# wait for Esc-key from user
:: WAIT_ESC
#:: MODE(BAR1,off)
# print message
:: PRI("Test L1")
# add cad-objects
P20=100 100 0
C20=P20 60
# dump cad-objects
:: DUMP (C20)
# call editor; wait until closed ..
:: system (pluma /tmp/t1)


#-------------------------------------------------------------
:L2:
:: PRI("Test L2")             
# dump symbolic-directories into console
:: DUMP("SD")
# add textstring, unvisible; can only be read with DB_get_Text
N20="das ist ein Test"
# call func myFunc1 with 3 parameters;
::: myFunc1 abc def 123


#-------------------------------------------------------------
:Demo_subProg:
:: clear
# process block ":SM1:", then return
::: :SM1:
# zoom all
:: ZOOMALL
# wait for Esc-key from user
:: WAIT_ESC
# add object
L20=P(0 0 0) P(C20 0.25)


#-------------------------------------------------------------
:SM1:
C20=P(0 0 0) 20



#-------------------------------------------------------------
:EOF:
